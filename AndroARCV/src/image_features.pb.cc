// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "image_features.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace androar {

namespace {

const ::google::protobuf::Descriptor* GPSPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GPSPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* CompassPosition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CompassPosition_reflection_ = NULL;
const ::google::protobuf::Descriptor* LocalizationFeatures_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LocalizationFeatures_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectBoundingBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectBoundingBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* ObjectMetadata_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ObjectMetadata_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetectedObject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedObject_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DetectedObject_DetectedObjectType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ImageContents_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ImageContents_reflection_ = NULL;
const ::google::protobuf::Descriptor* Image_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Image_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_image_5ffeatures_2eproto() {
  protobuf_AddDesc_image_5ffeatures_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "image_features.proto");
  GOOGLE_CHECK(file != NULL);
  GPSPosition_descriptor_ = file->message_type(0);
  static const int GPSPosition_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPSPosition, latitude_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPSPosition, longitude_),
  };
  GPSPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GPSPosition_descriptor_,
      GPSPosition::default_instance_,
      GPSPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPSPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GPSPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GPSPosition));
  CompassPosition_descriptor_ = file->message_type(1);
  static const int CompassPosition_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompassPosition, angle_),
  };
  CompassPosition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      CompassPosition_descriptor_,
      CompassPosition::default_instance_,
      CompassPosition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompassPosition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CompassPosition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(CompassPosition));
  LocalizationFeatures_descriptor_ = file->message_type(2);
  static const int LocalizationFeatures_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationFeatures, gps_position_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationFeatures, compass_position_),
  };
  LocalizationFeatures_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      LocalizationFeatures_descriptor_,
      LocalizationFeatures::default_instance_,
      LocalizationFeatures_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationFeatures, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LocalizationFeatures, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(LocalizationFeatures));
  ObjectBoundingBox_descriptor_ = file->message_type(3);
  static const int ObjectBoundingBox_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, bottom_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, right_),
  };
  ObjectBoundingBox_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectBoundingBox_descriptor_,
      ObjectBoundingBox::default_instance_,
      ObjectBoundingBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectBoundingBox, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectBoundingBox));
  ObjectMetadata_descriptor_ = file->message_type(4);
  static const int ObjectMetadata_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMetadata, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMetadata, description_),
  };
  ObjectMetadata_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ObjectMetadata_descriptor_,
      ObjectMetadata::default_instance_,
      ObjectMetadata_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMetadata, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMetadata, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ObjectMetadata));
  DetectedObject_descriptor_ = file->message_type(5);
  static const int DetectedObject_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, object_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, bounding_box_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, distance_to_viewer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, angle_to_viewer_),
  };
  DetectedObject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      DetectedObject_descriptor_,
      DetectedObject::default_instance_,
      DetectedObject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedObject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(DetectedObject));
  DetectedObject_DetectedObjectType_descriptor_ = DetectedObject_descriptor_->enum_type(0);
  ImageContents_descriptor_ = file->message_type(6);
  static const int ImageContents_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContents, image_hash_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContents, image_contents_),
  };
  ImageContents_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ImageContents_descriptor_,
      ImageContents::default_instance_,
      ImageContents_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContents, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageContents, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ImageContents));
  Image_descriptor_ = file->message_type(7);
  static const int Image_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, localization_features_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, detected_objects_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, possible_present_objects_),
  };
  Image_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Image_descriptor_,
      Image::default_instance_,
      Image_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Image, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Image));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_image_5ffeatures_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GPSPosition_descriptor_, &GPSPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    CompassPosition_descriptor_, &CompassPosition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    LocalizationFeatures_descriptor_, &LocalizationFeatures::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectBoundingBox_descriptor_, &ObjectBoundingBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ObjectMetadata_descriptor_, &ObjectMetadata::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    DetectedObject_descriptor_, &DetectedObject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ImageContents_descriptor_, &ImageContents::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Image_descriptor_, &Image::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_image_5ffeatures_2eproto() {
  delete GPSPosition::default_instance_;
  delete GPSPosition_reflection_;
  delete CompassPosition::default_instance_;
  delete CompassPosition_reflection_;
  delete LocalizationFeatures::default_instance_;
  delete LocalizationFeatures_reflection_;
  delete ObjectBoundingBox::default_instance_;
  delete ObjectBoundingBox_reflection_;
  delete ObjectMetadata::default_instance_;
  delete ObjectMetadata_reflection_;
  delete DetectedObject::default_instance_;
  delete DetectedObject_reflection_;
  delete ImageContents::default_instance_;
  delete ImageContents_reflection_;
  delete Image::default_instance_;
  delete Image_reflection_;
}

void protobuf_AddDesc_image_5ffeatures_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\024image_features.proto\022\007androar\"2\n\013GPSPo"
    "sition\022\020\n\010latitude\030\001 \002(\002\022\021\n\tlongitude\030\002 "
    "\002(\002\" \n\017CompassPosition\022\r\n\005angle\030\001 \002(\002\"v\n"
    "\024LocalizationFeatures\022*\n\014gps_position\030\001 "
    "\001(\0132\024.androar.GPSPosition\0222\n\020compass_pos"
    "ition\030\002 \001(\0132\030.androar.CompassPosition\"M\n"
    "\021ObjectBoundingBox\022\016\n\006bottom\030\001 \002(\005\022\013\n\003to"
    "p\030\002 \002(\005\022\014\n\004left\030\003 \002(\005\022\r\n\005right\030\004 \002(\005\"3\n\016"
    "ObjectMetadata\022\014\n\004name\030\001 \001(\t\022\023\n\013descript"
    "ion\030\002 \001(\t\"\262\002\n\016DetectedObject\022\?\n\013object_t"
    "ype\030\001 \002(\0162*.androar.DetectedObject.Detec"
    "tedObjectType\0220\n\014bounding_box\030\002 \002(\0132\032.an"
    "droar.ObjectBoundingBox\022)\n\010metadata\030\003 \001("
    "\0132\027.androar.ObjectMetadata\022\n\n\002id\030\004 \002(\t\022\032"
    "\n\022distance_to_viewer\030\005 \001(\005\022\027\n\017angle_to_v"
    "iewer\030\006 \001(\005\"A\n\022DetectedObjectType\022\013\n\007UNK"
    "NOWN\020\001\022\014\n\010BUILDING\020\002\022\020\n\014LAST_ELEMENT\020\003\";"
    "\n\rImageContents\022\022\n\nimage_hash\030\001 \002(\t\022\026\n\016i"
    "mage_contents\030\002 \002(\014\"\301\001\n\005Image\022%\n\005image\030\001"
    " \002(\0132\026.androar.ImageContents\022<\n\025localiza"
    "tion_features\030\002 \001(\0132\035.androar.Localizati"
    "onFeatures\0221\n\020detected_objects\030\003 \003(\0132\027.a"
    "ndroar.DetectedObject\022 \n\030possible_presen"
    "t_objects\030\004 \003(\tB\'\n\020com.androar.commB\023Ima"
    "geFeaturesProtos", 976);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "image_features.proto", &protobuf_RegisterTypes);
  GPSPosition::default_instance_ = new GPSPosition();
  CompassPosition::default_instance_ = new CompassPosition();
  LocalizationFeatures::default_instance_ = new LocalizationFeatures();
  ObjectBoundingBox::default_instance_ = new ObjectBoundingBox();
  ObjectMetadata::default_instance_ = new ObjectMetadata();
  DetectedObject::default_instance_ = new DetectedObject();
  ImageContents::default_instance_ = new ImageContents();
  Image::default_instance_ = new Image();
  GPSPosition::default_instance_->InitAsDefaultInstance();
  CompassPosition::default_instance_->InitAsDefaultInstance();
  LocalizationFeatures::default_instance_->InitAsDefaultInstance();
  ObjectBoundingBox::default_instance_->InitAsDefaultInstance();
  ObjectMetadata::default_instance_->InitAsDefaultInstance();
  DetectedObject::default_instance_->InitAsDefaultInstance();
  ImageContents::default_instance_->InitAsDefaultInstance();
  Image::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_image_5ffeatures_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_image_5ffeatures_2eproto {
  StaticDescriptorInitializer_image_5ffeatures_2eproto() {
    protobuf_AddDesc_image_5ffeatures_2eproto();
  }
} static_descriptor_initializer_image_5ffeatures_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int GPSPosition::kLatitudeFieldNumber;
const int GPSPosition::kLongitudeFieldNumber;
#endif  // !_MSC_VER

GPSPosition::GPSPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GPSPosition::InitAsDefaultInstance() {
}

GPSPosition::GPSPosition(const GPSPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GPSPosition::SharedCtor() {
  _cached_size_ = 0;
  latitude_ = 0;
  longitude_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GPSPosition::~GPSPosition() {
  SharedDtor();
}

void GPSPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void GPSPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GPSPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GPSPosition_descriptor_;
}

const GPSPosition& GPSPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

GPSPosition* GPSPosition::default_instance_ = NULL;

GPSPosition* GPSPosition::New() const {
  return new GPSPosition;
}

void GPSPosition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    latitude_ = 0;
    longitude_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GPSPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float latitude = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &latitude_)));
          set_has_latitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(21)) goto parse_longitude;
        break;
      }
      
      // required float longitude = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
         parse_longitude:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &longitude_)));
          set_has_longitude();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GPSPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float latitude = 1;
  if (has_latitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->latitude(), output);
  }
  
  // required float longitude = 2;
  if (has_longitude()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->longitude(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GPSPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float latitude = 1;
  if (has_latitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->latitude(), target);
  }
  
  // required float longitude = 2;
  if (has_longitude()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->longitude(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GPSPosition::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float latitude = 1;
    if (has_latitude()) {
      total_size += 1 + 4;
    }
    
    // required float longitude = 2;
    if (has_longitude()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GPSPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GPSPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GPSPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GPSPosition::MergeFrom(const GPSPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_latitude()) {
      set_latitude(from.latitude());
    }
    if (from.has_longitude()) {
      set_longitude(from.longitude());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GPSPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GPSPosition::CopyFrom(const GPSPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GPSPosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void GPSPosition::Swap(GPSPosition* other) {
  if (other != this) {
    std::swap(latitude_, other->latitude_);
    std::swap(longitude_, other->longitude_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GPSPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GPSPosition_descriptor_;
  metadata.reflection = GPSPosition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int CompassPosition::kAngleFieldNumber;
#endif  // !_MSC_VER

CompassPosition::CompassPosition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void CompassPosition::InitAsDefaultInstance() {
}

CompassPosition::CompassPosition(const CompassPosition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void CompassPosition::SharedCtor() {
  _cached_size_ = 0;
  angle_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

CompassPosition::~CompassPosition() {
  SharedDtor();
}

void CompassPosition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void CompassPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CompassPosition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CompassPosition_descriptor_;
}

const CompassPosition& CompassPosition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

CompassPosition* CompassPosition::default_instance_ = NULL;

CompassPosition* CompassPosition::New() const {
  return new CompassPosition;
}

void CompassPosition::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    angle_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool CompassPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required float angle = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
          set_has_angle();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void CompassPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required float angle = 1;
  if (has_angle()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->angle(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* CompassPosition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required float angle = 1;
  if (has_angle()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->angle(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int CompassPosition::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required float angle = 1;
    if (has_angle()) {
      total_size += 1 + 4;
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CompassPosition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const CompassPosition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const CompassPosition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void CompassPosition::MergeFrom(const CompassPosition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_angle()) {
      set_angle(from.angle());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void CompassPosition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompassPosition::CopyFrom(const CompassPosition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompassPosition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void CompassPosition::Swap(CompassPosition* other) {
  if (other != this) {
    std::swap(angle_, other->angle_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata CompassPosition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CompassPosition_descriptor_;
  metadata.reflection = CompassPosition_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int LocalizationFeatures::kGpsPositionFieldNumber;
const int LocalizationFeatures::kCompassPositionFieldNumber;
#endif  // !_MSC_VER

LocalizationFeatures::LocalizationFeatures()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void LocalizationFeatures::InitAsDefaultInstance() {
  gps_position_ = const_cast< ::androar::GPSPosition*>(&::androar::GPSPosition::default_instance());
  compass_position_ = const_cast< ::androar::CompassPosition*>(&::androar::CompassPosition::default_instance());
}

LocalizationFeatures::LocalizationFeatures(const LocalizationFeatures& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void LocalizationFeatures::SharedCtor() {
  _cached_size_ = 0;
  gps_position_ = NULL;
  compass_position_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LocalizationFeatures::~LocalizationFeatures() {
  SharedDtor();
}

void LocalizationFeatures::SharedDtor() {
  if (this != default_instance_) {
    delete gps_position_;
    delete compass_position_;
  }
}

void LocalizationFeatures::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalizationFeatures::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LocalizationFeatures_descriptor_;
}

const LocalizationFeatures& LocalizationFeatures::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

LocalizationFeatures* LocalizationFeatures::default_instance_ = NULL;

LocalizationFeatures* LocalizationFeatures::New() const {
  return new LocalizationFeatures;
}

void LocalizationFeatures::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_gps_position()) {
      if (gps_position_ != NULL) gps_position_->::androar::GPSPosition::Clear();
    }
    if (has_compass_position()) {
      if (compass_position_ != NULL) compass_position_->::androar::CompassPosition::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool LocalizationFeatures::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .androar.GPSPosition gps_position = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gps_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_compass_position;
        break;
      }
      
      // optional .androar.CompassPosition compass_position = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_compass_position:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_compass_position()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void LocalizationFeatures::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional .androar.GPSPosition gps_position = 1;
  if (has_gps_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->gps_position(), output);
  }
  
  // optional .androar.CompassPosition compass_position = 2;
  if (has_compass_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->compass_position(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* LocalizationFeatures::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional .androar.GPSPosition gps_position = 1;
  if (has_gps_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->gps_position(), target);
  }
  
  // optional .androar.CompassPosition compass_position = 2;
  if (has_compass_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->compass_position(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int LocalizationFeatures::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional .androar.GPSPosition gps_position = 1;
    if (has_gps_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gps_position());
    }
    
    // optional .androar.CompassPosition compass_position = 2;
    if (has_compass_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->compass_position());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalizationFeatures::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const LocalizationFeatures* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LocalizationFeatures*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LocalizationFeatures::MergeFrom(const LocalizationFeatures& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_gps_position()) {
      mutable_gps_position()->::androar::GPSPosition::MergeFrom(from.gps_position());
    }
    if (from.has_compass_position()) {
      mutable_compass_position()->::androar::CompassPosition::MergeFrom(from.compass_position());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void LocalizationFeatures::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalizationFeatures::CopyFrom(const LocalizationFeatures& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalizationFeatures::IsInitialized() const {
  
  if (has_gps_position()) {
    if (!this->gps_position().IsInitialized()) return false;
  }
  if (has_compass_position()) {
    if (!this->compass_position().IsInitialized()) return false;
  }
  return true;
}

void LocalizationFeatures::Swap(LocalizationFeatures* other) {
  if (other != this) {
    std::swap(gps_position_, other->gps_position_);
    std::swap(compass_position_, other->compass_position_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata LocalizationFeatures::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LocalizationFeatures_descriptor_;
  metadata.reflection = LocalizationFeatures_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectBoundingBox::kBottomFieldNumber;
const int ObjectBoundingBox::kTopFieldNumber;
const int ObjectBoundingBox::kLeftFieldNumber;
const int ObjectBoundingBox::kRightFieldNumber;
#endif  // !_MSC_VER

ObjectBoundingBox::ObjectBoundingBox()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectBoundingBox::InitAsDefaultInstance() {
}

ObjectBoundingBox::ObjectBoundingBox(const ObjectBoundingBox& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectBoundingBox::SharedCtor() {
  _cached_size_ = 0;
  bottom_ = 0;
  top_ = 0;
  left_ = 0;
  right_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectBoundingBox::~ObjectBoundingBox() {
  SharedDtor();
}

void ObjectBoundingBox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ObjectBoundingBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectBoundingBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectBoundingBox_descriptor_;
}

const ObjectBoundingBox& ObjectBoundingBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

ObjectBoundingBox* ObjectBoundingBox::default_instance_ = NULL;

ObjectBoundingBox* ObjectBoundingBox::New() const {
  return new ObjectBoundingBox;
}

void ObjectBoundingBox::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    bottom_ = 0;
    top_ = 0;
    left_ = 0;
    right_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectBoundingBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 bottom = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_top;
        break;
      }
      
      // required int32 top = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &top_)));
          set_has_top();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_left;
        break;
      }
      
      // required int32 left = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_left:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &left_)));
          set_has_left();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_right;
        break;
      }
      
      // required int32 right = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &right_)));
          set_has_right();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectBoundingBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 bottom = 1;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bottom(), output);
  }
  
  // required int32 top = 2;
  if (has_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->top(), output);
  }
  
  // required int32 left = 3;
  if (has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->left(), output);
  }
  
  // required int32 right = 4;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->right(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectBoundingBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 bottom = 1;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bottom(), target);
  }
  
  // required int32 top = 2;
  if (has_top()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->top(), target);
  }
  
  // required int32 left = 3;
  if (has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->left(), target);
  }
  
  // required int32 right = 4;
  if (has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->right(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectBoundingBox::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 bottom = 1;
    if (has_bottom()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->bottom());
    }
    
    // required int32 top = 2;
    if (has_top()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->top());
    }
    
    // required int32 left = 3;
    if (has_left()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->left());
    }
    
    // required int32 right = 4;
    if (has_right()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->right());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectBoundingBox::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectBoundingBox* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectBoundingBox*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectBoundingBox::MergeFrom(const ObjectBoundingBox& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
    if (from.has_top()) {
      set_top(from.top());
    }
    if (from.has_left()) {
      set_left(from.left());
    }
    if (from.has_right()) {
      set_right(from.right());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectBoundingBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectBoundingBox::CopyFrom(const ObjectBoundingBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectBoundingBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  
  return true;
}

void ObjectBoundingBox::Swap(ObjectBoundingBox* other) {
  if (other != this) {
    std::swap(bottom_, other->bottom_);
    std::swap(top_, other->top_);
    std::swap(left_, other->left_);
    std::swap(right_, other->right_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectBoundingBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectBoundingBox_descriptor_;
  metadata.reflection = ObjectBoundingBox_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ObjectMetadata::kNameFieldNumber;
const int ObjectMetadata::kDescriptionFieldNumber;
#endif  // !_MSC_VER

ObjectMetadata::ObjectMetadata()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ObjectMetadata::InitAsDefaultInstance() {
}

ObjectMetadata::ObjectMetadata(const ObjectMetadata& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ObjectMetadata::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ObjectMetadata::~ObjectMetadata() {
  SharedDtor();
}

void ObjectMetadata::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::kEmptyString) {
    delete description_;
  }
  if (this != default_instance_) {
  }
}

void ObjectMetadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectMetadata::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ObjectMetadata_descriptor_;
}

const ObjectMetadata& ObjectMetadata::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

ObjectMetadata* ObjectMetadata::default_instance_ = NULL;

ObjectMetadata* ObjectMetadata::New() const {
  return new ObjectMetadata;
}

void ObjectMetadata::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::kEmptyString) {
        description_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ObjectMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }
      
      // optional string description = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ObjectMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // optional string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->description(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ObjectMetadata::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // optional string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ObjectMetadata::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // optional string description = 2;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectMetadata::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ObjectMetadata* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ObjectMetadata*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ObjectMetadata::MergeFrom(const ObjectMetadata& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ObjectMetadata::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectMetadata::CopyFrom(const ObjectMetadata& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMetadata::IsInitialized() const {
  
  return true;
}

void ObjectMetadata::Swap(ObjectMetadata* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(description_, other->description_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ObjectMetadata::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ObjectMetadata_descriptor_;
  metadata.reflection = ObjectMetadata_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* DetectedObject_DetectedObjectType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedObject_DetectedObjectType_descriptor_;
}
bool DetectedObject_DetectedObjectType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const DetectedObject_DetectedObjectType DetectedObject::UNKNOWN;
const DetectedObject_DetectedObjectType DetectedObject::BUILDING;
const DetectedObject_DetectedObjectType DetectedObject::LAST_ELEMENT;
const DetectedObject_DetectedObjectType DetectedObject::DetectedObjectType_MIN;
const DetectedObject_DetectedObjectType DetectedObject::DetectedObjectType_MAX;
const int DetectedObject::DetectedObjectType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int DetectedObject::kObjectTypeFieldNumber;
const int DetectedObject::kBoundingBoxFieldNumber;
const int DetectedObject::kMetadataFieldNumber;
const int DetectedObject::kIdFieldNumber;
const int DetectedObject::kDistanceToViewerFieldNumber;
const int DetectedObject::kAngleToViewerFieldNumber;
#endif  // !_MSC_VER

DetectedObject::DetectedObject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void DetectedObject::InitAsDefaultInstance() {
  bounding_box_ = const_cast< ::androar::ObjectBoundingBox*>(&::androar::ObjectBoundingBox::default_instance());
  metadata_ = const_cast< ::androar::ObjectMetadata*>(&::androar::ObjectMetadata::default_instance());
}

DetectedObject::DetectedObject(const DetectedObject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void DetectedObject::SharedCtor() {
  _cached_size_ = 0;
  object_type_ = 1;
  bounding_box_ = NULL;
  metadata_ = NULL;
  id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  distance_to_viewer_ = 0;
  angle_to_viewer_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedObject::~DetectedObject() {
  SharedDtor();
}

void DetectedObject::SharedDtor() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (this != default_instance_) {
    delete bounding_box_;
    delete metadata_;
  }
}

void DetectedObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedObject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedObject_descriptor_;
}

const DetectedObject& DetectedObject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

DetectedObject* DetectedObject::default_instance_ = NULL;

DetectedObject* DetectedObject::New() const {
  return new DetectedObject;
}

void DetectedObject::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    object_type_ = 1;
    if (has_bounding_box()) {
      if (bounding_box_ != NULL) bounding_box_->::androar::ObjectBoundingBox::Clear();
    }
    if (has_metadata()) {
      if (metadata_ != NULL) metadata_->::androar::ObjectMetadata::Clear();
    }
    if (has_id()) {
      if (id_ != &::google::protobuf::internal::kEmptyString) {
        id_->clear();
      }
    }
    distance_to_viewer_ = 0;
    angle_to_viewer_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool DetectedObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .androar.DetectedObject.DetectedObjectType object_type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::androar::DetectedObject_DetectedObjectType_IsValid(value)) {
            set_object_type(static_cast< ::androar::DetectedObject_DetectedObjectType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bounding_box;
        break;
      }
      
      // required .androar.ObjectBoundingBox bounding_box = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bounding_box:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bounding_box()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_metadata;
        break;
      }
      
      // optional .androar.ObjectMetadata metadata = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_metadata()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_id;
        break;
      }
      
      // required string id = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_distance_to_viewer;
        break;
      }
      
      // optional int32 distance_to_viewer = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_distance_to_viewer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &distance_to_viewer_)));
          set_has_distance_to_viewer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_angle_to_viewer;
        break;
      }
      
      // optional int32 angle_to_viewer = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_angle_to_viewer:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &angle_to_viewer_)));
          set_has_angle_to_viewer();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void DetectedObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .androar.DetectedObject.DetectedObjectType object_type = 1;
  if (has_object_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->object_type(), output);
  }
  
  // required .androar.ObjectBoundingBox bounding_box = 2;
  if (has_bounding_box()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bounding_box(), output);
  }
  
  // optional .androar.ObjectMetadata metadata = 3;
  if (has_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->metadata(), output);
  }
  
  // required string id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->id(), output);
  }
  
  // optional int32 distance_to_viewer = 5;
  if (has_distance_to_viewer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->distance_to_viewer(), output);
  }
  
  // optional int32 angle_to_viewer = 6;
  if (has_angle_to_viewer()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->angle_to_viewer(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* DetectedObject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .androar.DetectedObject.DetectedObjectType object_type = 1;
  if (has_object_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->object_type(), target);
  }
  
  // required .androar.ObjectBoundingBox bounding_box = 2;
  if (has_bounding_box()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bounding_box(), target);
  }
  
  // optional .androar.ObjectMetadata metadata = 3;
  if (has_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->metadata(), target);
  }
  
  // required string id = 4;
  if (has_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->id(), target);
  }
  
  // optional int32 distance_to_viewer = 5;
  if (has_distance_to_viewer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->distance_to_viewer(), target);
  }
  
  // optional int32 angle_to_viewer = 6;
  if (has_angle_to_viewer()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->angle_to_viewer(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int DetectedObject::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .androar.DetectedObject.DetectedObjectType object_type = 1;
    if (has_object_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->object_type());
    }
    
    // required .androar.ObjectBoundingBox bounding_box = 2;
    if (has_bounding_box()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bounding_box());
    }
    
    // optional .androar.ObjectMetadata metadata = 3;
    if (has_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->metadata());
    }
    
    // required string id = 4;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->id());
    }
    
    // optional int32 distance_to_viewer = 5;
    if (has_distance_to_viewer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->distance_to_viewer());
    }
    
    // optional int32 angle_to_viewer = 6;
    if (has_angle_to_viewer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->angle_to_viewer());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedObject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const DetectedObject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const DetectedObject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DetectedObject::MergeFrom(const DetectedObject& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_object_type()) {
      set_object_type(from.object_type());
    }
    if (from.has_bounding_box()) {
      mutable_bounding_box()->::androar::ObjectBoundingBox::MergeFrom(from.bounding_box());
    }
    if (from.has_metadata()) {
      mutable_metadata()->::androar::ObjectMetadata::MergeFrom(from.metadata());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_distance_to_viewer()) {
      set_distance_to_viewer(from.distance_to_viewer());
    }
    if (from.has_angle_to_viewer()) {
      set_angle_to_viewer(from.angle_to_viewer());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void DetectedObject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedObject::CopyFrom(const DetectedObject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedObject::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000b) != 0x0000000b) return false;
  
  if (has_bounding_box()) {
    if (!this->bounding_box().IsInitialized()) return false;
  }
  return true;
}

void DetectedObject::Swap(DetectedObject* other) {
  if (other != this) {
    std::swap(object_type_, other->object_type_);
    std::swap(bounding_box_, other->bounding_box_);
    std::swap(metadata_, other->metadata_);
    std::swap(id_, other->id_);
    std::swap(distance_to_viewer_, other->distance_to_viewer_);
    std::swap(angle_to_viewer_, other->angle_to_viewer_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata DetectedObject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedObject_descriptor_;
  metadata.reflection = DetectedObject_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ImageContents::kImageHashFieldNumber;
const int ImageContents::kImageContentsFieldNumber;
#endif  // !_MSC_VER

ImageContents::ImageContents()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ImageContents::InitAsDefaultInstance() {
}

ImageContents::ImageContents(const ImageContents& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ImageContents::SharedCtor() {
  _cached_size_ = 0;
  image_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  image_contents_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ImageContents::~ImageContents() {
  SharedDtor();
}

void ImageContents::SharedDtor() {
  if (image_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete image_hash_;
  }
  if (image_contents_ != &::google::protobuf::internal::kEmptyString) {
    delete image_contents_;
  }
  if (this != default_instance_) {
  }
}

void ImageContents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageContents::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ImageContents_descriptor_;
}

const ImageContents& ImageContents::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

ImageContents* ImageContents::default_instance_ = NULL;

ImageContents* ImageContents::New() const {
  return new ImageContents;
}

void ImageContents::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_image_hash()) {
      if (image_hash_ != &::google::protobuf::internal::kEmptyString) {
        image_hash_->clear();
      }
    }
    if (has_image_contents()) {
      if (image_contents_ != &::google::protobuf::internal::kEmptyString) {
        image_contents_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ImageContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string image_hash = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->image_hash().data(), this->image_hash().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_image_contents;
        break;
      }
      
      // required bytes image_contents = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_image_contents:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_image_contents()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ImageContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string image_hash = 1;
  if (has_image_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_hash().data(), this->image_hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->image_hash(), output);
  }
  
  // required bytes image_contents = 2;
  if (has_image_contents()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      2, this->image_contents(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ImageContents::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string image_hash = 1;
  if (has_image_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->image_hash().data(), this->image_hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->image_hash(), target);
  }
  
  // required bytes image_contents = 2;
  if (has_image_contents()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->image_contents(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ImageContents::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string image_hash = 1;
    if (has_image_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->image_hash());
    }
    
    // required bytes image_contents = 2;
    if (has_image_contents()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->image_contents());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageContents::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ImageContents* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ImageContents*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ImageContents::MergeFrom(const ImageContents& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_image_hash()) {
      set_image_hash(from.image_hash());
    }
    if (from.has_image_contents()) {
      set_image_contents(from.image_contents());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ImageContents::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageContents::CopyFrom(const ImageContents& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageContents::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void ImageContents::Swap(ImageContents* other) {
  if (other != this) {
    std::swap(image_hash_, other->image_hash_);
    std::swap(image_contents_, other->image_contents_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ImageContents::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ImageContents_descriptor_;
  metadata.reflection = ImageContents_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Image::kImageFieldNumber;
const int Image::kLocalizationFeaturesFieldNumber;
const int Image::kDetectedObjectsFieldNumber;
const int Image::kPossiblePresentObjectsFieldNumber;
#endif  // !_MSC_VER

Image::Image()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Image::InitAsDefaultInstance() {
  image_ = const_cast< ::androar::ImageContents*>(&::androar::ImageContents::default_instance());
  localization_features_ = const_cast< ::androar::LocalizationFeatures*>(&::androar::LocalizationFeatures::default_instance());
}

Image::Image(const Image& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Image::SharedCtor() {
  _cached_size_ = 0;
  image_ = NULL;
  localization_features_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Image::~Image() {
  SharedDtor();
}

void Image::SharedDtor() {
  if (this != default_instance_) {
    delete image_;
    delete localization_features_;
  }
}

void Image::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Image::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Image_descriptor_;
}

const Image& Image::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_image_5ffeatures_2eproto();  return *default_instance_;
}

Image* Image::default_instance_ = NULL;

Image* Image::New() const {
  return new Image;
}

void Image::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_image()) {
      if (image_ != NULL) image_->::androar::ImageContents::Clear();
    }
    if (has_localization_features()) {
      if (localization_features_ != NULL) localization_features_->::androar::LocalizationFeatures::Clear();
    }
  }
  detected_objects_.Clear();
  possible_present_objects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Image::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .androar.ImageContents image = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_image()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_localization_features;
        break;
      }
      
      // optional .androar.LocalizationFeatures localization_features = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_localization_features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_localization_features()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_detected_objects;
        break;
      }
      
      // repeated .androar.DetectedObject detected_objects = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_detected_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_detected_objects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_detected_objects;
        if (input->ExpectTag(34)) goto parse_possible_present_objects;
        break;
      }
      
      // repeated string possible_present_objects = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_possible_present_objects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_possible_present_objects()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->possible_present_objects(0).data(), this->possible_present_objects(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_possible_present_objects;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Image::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .androar.ImageContents image = 1;
  if (has_image()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->image(), output);
  }
  
  // optional .androar.LocalizationFeatures localization_features = 2;
  if (has_localization_features()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->localization_features(), output);
  }
  
  // repeated .androar.DetectedObject detected_objects = 3;
  for (int i = 0; i < this->detected_objects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->detected_objects(i), output);
  }
  
  // repeated string possible_present_objects = 4;
  for (int i = 0; i < this->possible_present_objects_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->possible_present_objects(i).data(), this->possible_present_objects(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->possible_present_objects(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Image::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .androar.ImageContents image = 1;
  if (has_image()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->image(), target);
  }
  
  // optional .androar.LocalizationFeatures localization_features = 2;
  if (has_localization_features()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->localization_features(), target);
  }
  
  // repeated .androar.DetectedObject detected_objects = 3;
  for (int i = 0; i < this->detected_objects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->detected_objects(i), target);
  }
  
  // repeated string possible_present_objects = 4;
  for (int i = 0; i < this->possible_present_objects_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->possible_present_objects(i).data(), this->possible_present_objects(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->possible_present_objects(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Image::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .androar.ImageContents image = 1;
    if (has_image()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->image());
    }
    
    // optional .androar.LocalizationFeatures localization_features = 2;
    if (has_localization_features()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->localization_features());
    }
    
  }
  // repeated .androar.DetectedObject detected_objects = 3;
  total_size += 1 * this->detected_objects_size();
  for (int i = 0; i < this->detected_objects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->detected_objects(i));
  }
  
  // repeated string possible_present_objects = 4;
  total_size += 1 * this->possible_present_objects_size();
  for (int i = 0; i < this->possible_present_objects_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->possible_present_objects(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Image::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Image* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Image*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Image::MergeFrom(const Image& from) {
  GOOGLE_CHECK_NE(&from, this);
  detected_objects_.MergeFrom(from.detected_objects_);
  possible_present_objects_.MergeFrom(from.possible_present_objects_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_image()) {
      mutable_image()->::androar::ImageContents::MergeFrom(from.image());
    }
    if (from.has_localization_features()) {
      mutable_localization_features()->::androar::LocalizationFeatures::MergeFrom(from.localization_features());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Image::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Image::CopyFrom(const Image& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Image::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_image()) {
    if (!this->image().IsInitialized()) return false;
  }
  if (has_localization_features()) {
    if (!this->localization_features().IsInitialized()) return false;
  }
  for (int i = 0; i < detected_objects_size(); i++) {
    if (!this->detected_objects(i).IsInitialized()) return false;
  }
  return true;
}

void Image::Swap(Image* other) {
  if (other != this) {
    std::swap(image_, other->image_);
    std::swap(localization_features_, other->localization_features_);
    detected_objects_.Swap(&other->detected_objects_);
    possible_present_objects_.Swap(&other->possible_present_objects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Image::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Image_descriptor_;
  metadata.reflection = Image_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace androar

// @@protoc_insertion_point(global_scope)
